{"version":3,"sources":["components/Col/index.js","components/Container/index.js","components/Footer/index.js","components/Header/index.js","components/Row/index.js","components/SearchForm/index.js","components/TableHeader/index.js","components/TableBody/index.js","components/EmployeeTable/index.js","App.js","index.js"],"names":["Col","props","size","split","map","join","className","children","Container","style","Footer","href","target","rel","Header","Row","SearchForm","htmlFor","value","search","onChange","handleInputChange","name","list","type","placeholder","id","employees","employee","key","onClick","handleFormSubmit","TableHeader","headers","colNames","forEach","element","header","handleEmployeeSort","push","getTableHeaders","TableBody","tableData","Object","keys","data","getTableRowData","EmployeeTable","Table","responsive","striped","bordered","hover","App","state","searchedName","event","preventDefault","compareFunction","employeesToSort","innerText","e1","e2","compareTwoStrings","department","email","console","log","sort","setState","trim","length","filteredEmployee","filter","string1","string2","marginTop","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1728ed4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Col(props) {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return <div className={size}>{props.children}</div>;\r\n}\r\n\r\nexport default Col;\r\n","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"bottom\">\r\n            <div className=\"footer-copyright text-center py-3\">\r\n                &copy; 2020 Copyright:\r\n          <a href=\"https://github.com/nitinmuk/\" target=\"_blank\" rel=\"noopener noreferrer\">Nitin Mukesh</a>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div  className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4 text-center\">Employee Directory</h1>\r\n          <p className=\"lead text-center\">An app to view, search and sort employees</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Row(props) {\r\n  return <div className=\"row\">{props.children}</div>;\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Using the datalist element \r\n//we can create autofill suggestions based on the props.name array\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"employee\">Employee Name:</label>\r\n        <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          name=\"employee\"\r\n          list=\"employees\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Type in a employee name to search...\"\r\n          id=\"employee\"\r\n        />\r\n        <datalist id=\"employees\">\r\n          {props.employees.map(employee => (\r\n            <option value={employee.name} key={employee.id} />\r\n          ))}\r\n        </datalist>\r\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React from \"react\";\r\nconst TableHeader = (props) => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {getTableHeaders(props)}\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nfunction getTableHeaders(props) {\r\n    const headers = [];\r\n    props.colNames.forEach(element => {\r\n        const header = <th onClick={props.handleEmployeeSort} key={element}>\r\n            {element}\r\n        </th>\r\n        headers.push(header);\r\n    });\r\n    return headers;\r\n}\r\n\r\nexport default TableHeader;","import React from \"react\";\r\n\r\nconst TableBody = (props) => {\r\n    return (<tbody>\r\n        {props.employees.map(\r\n            employee => {\r\n                return (\r\n                    <tr key={employee.id}>\r\n                        {getTableRowData(employee)}\r\n\r\n                    </tr>\r\n                );\r\n            }\r\n        )}\r\n    </tbody>);\r\n};\r\n\r\nfunction getTableRowData(employee){\r\n    const tableData = [];\r\n    Object.keys(employee)\r\n    .forEach(data => tableData.push(<td key={data}>{employee[data]}</td>));\r\n    return tableData;\r\n}\r\n\r\nexport default TableBody;","import React from \"react\";\r\nimport TableHeader from \"../TableHeader\";\r\nimport TableBody from \"../TableBody\";\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nfunction EmployeeTable(props) {\r\n  return (<Table responsive striped bordered hover>\r\n    <TableHeader\r\n      colNames={Object.keys(props.employees[0])}\r\n      handleEmployeeSort={props.handleEmployeeSort}\r\n    />\r\n    <TableBody\r\n      employees={props.employees}\r\n    />\r\n  </Table>\r\n  );\r\n}\r\n\r\nexport default EmployeeTable;","import React from 'react';\nimport Col from './components/Col';\nimport Container from './components/Container';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Row from './components/Row';\nimport SearchForm from './components/SearchForm';\nimport EmployeeTable from './components/EmployeeTable';\nimport employees from './utils/employees.json';\n\nclass App extends React.Component {\n\n  state = {\n    employees,\n    searchedName: \"\",\n  };\n\n  compareTwoStrings(string1, string2) {\n    if (string1 === string2) {\n      return 0;\n    }\n    else if (string1 < string2) {\n      return -1;\n    }\n    else {\n      return 1;\n    }\n  }\n\n  handleEmployeeSort = event => {\n    event.preventDefault();\n    const employeesToSort = this.state.employees;\n    let compareFunction;\n    const sortCriteria = event.target.innerText;\n    switch (sortCriteria) {\n      case \"name\":\n        compareFunction = (e1, e2) => this.compareTwoStrings(e1.name, e2.name);\n        break;\n      case \"department\":\n        compareFunction = (e1, e2) => this.compareTwoStrings(e1.department, e2.department);\n        break;\n      case \"email\":\n        compareFunction = (e1, e2) => this.compareTwoStrings(e1.email, e2.email);\n        break;\n      case \"id\":\n        compareFunction = (e1, e2) => (e1.id - e2.id);\n        break;\n      default:\n        console.log(\"Not Supported\");\n    }\n    employeesToSort.sort(compareFunction);\n    this.setState({ employees: employeesToSort });\n  }\n\n  handleInputChange = event => {\n    this.setState({ searchedName: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.searchedName && this.state.searchedName.trim().length) {\n      const filteredEmployee = employees\n        .filter(employee => employee.name === this.state.searchedName);\n      this.setState({ employees: filteredEmployee });\n    }\n    else {\n      this.setState({ employees: employees });\n    }\n  };\n\n  render() {\n    return (<div>\n      <Header />\n      <Container style={{ marginTop: 30 }}>\n        <Row>\n          <Col size=\"md-12\">\n            <SearchForm\n              handleFormSubmit={this.handleFormSubmit}\n              handleInputChange={this.handleInputChange}\n              employees={employees.map(employee => { return { name: employee.name, id: employee.id } })}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <EmployeeTable\n              employees={this.state.employees}\n              handleEmployeeSort={this.handleEmployeeSort}\n            />\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </div>);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}